---
name: Terraform Workflow

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:

env:
  TF_PLAN_FILE: tfplan

defaults:
  run:
    shell: bash
    working-directory: ./implementation

jobs:
  planb:
    runs-on: ubuntu-latest
    outputs:
      has-changes: ${{ steps.plan.outputs.has-changes }}
    steps:
      - name: Dummy Plan
        id: plan
        run: |
          echo "has-changes=true" >> "$GITHUB_OUTPUT"

    print:
      needs: plan
      runs-on: ubuntu-latest
      if: needs.planb.outputs.has-changes == 'true'
      steps:
        - run: echo "There are changes"
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: dev-plan
    outputs:
      has-changes: ${{ steps.tf-plan.outputs.has-changes }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN_GH_RUNNER }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Get backend bucket from Parameter Store
        id: get-backend-bucket
        run: |
          BACKEND_BUCKET=$(aws ssm get-parameter --name "/tf/backend/s3" --query "Parameter.Value" --output text)
          echo "backend_bucket=$BACKEND_BUCKET" >> $GITHUB_OUTPUT
          
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -backend-config="bucket=${{ steps.get-backend-bucket.outputs.backend_bucket }}" \
            -backend-config="key=terraform.tfstate" \
            -upgrade \
            -reconfigure

      - name: Validate Terraform
        run: terraform validate

      - name: Terraform Plan
        id: tf-plan
        run: |
          set +e

          terraform plan \
            -detailed-exitcode \
            -out=${{ env.TF_PLAN_FILE }}
          
          EXITCODE=$?
          
          echo "exitcode=$EXITCODE" >> $GITHUB_OUTPUT
  
          # Display status emoji based on exit code
          case $EXITCODE in
            0)
              echo "✅ No changes"
              echo "has-changes=false" >> $GITHUB_OUTPUT
              ;;
            2)
              echo "🔄 Changes detected"
              echo "has-changes=true" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "❌ Plan failed"
              exit 1
              ;;
          esac

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        if: ${{ steps.tf-plan.outputs.has-changes == 'true' }}
        with:
          name: ${{ env.TF_PLAN_FILE }}
          path: ${{ env.TF_PLAN_FILE }}
          retention-days: 1

#    apply:
#      name: Terraform Apply
#      runs-on: ubuntu-latest
#      environment: dev-plan
#      needs: plan
#
#      steps:
#        - name: Checkout Repository
#          uses: actions/checkout@v4
#
#        - name: Setup Terraform
#          uses: hashicorp/setup-terraform@v3
#          with:
#            terraform_version: 1.12.2
#
#        - name: Configure AWS Credentials
#          uses: aws-actions/configure-aws-credentials@v4
#          with:
#            role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN_GH_RUNNER }}
#            aws-region: ${{ vars.AWS_REGION }}
#
#        - name: Get backend bucket from Parameter Store
#          id: get-backend-bucket
#          run: |
#            BACKEND_BUCKET=$(aws ssm get-parameter --name "/tf/backend/s3" --query "Parameter.Value" --output text)
#            echo "backend_bucket=$BACKEND_BUCKET" >> $GITHUB_OUTPUT
#
#        - name: Terraform Init
#          run: |
#            terraform init \
#              -backend-config="region=${{ vars.AWS_REGION }}" \
#              -backend-config="bucket=${{ steps.get-backend-bucket.outputs.backend_bucket }}" \
#              -backend-config="key=terraform.tfstate" \
#              -upgrade \
#              -reconfigure
#
#        - name: Validate Terraform
#          run: terraform validate
#
#        - name: Download Terraform Plan
#          uses: actions/download-artifact@v4
#          with:
#            name: ${{ env.TF_PLAN_FILE }}
#
#        - name: Terraform Apply